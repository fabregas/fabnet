#!/usr/bin/python
import os
import sys

NODE_SCRIPT = os.path.abspath(os.path.join(os.path.dirname(__file__), 'fabnet-node'))
PYPATH = os.path.abspath(os.path.join(os.path.dirname(__file__), '../../'))

DEFAULT_PORT = 1987
DEFAULT_HOME = '~/fabnet_node_home'


def usage():
    print('Usage: %s start <neighbour node>[:port] <node name> <node type> [<key storage path>]'%sys.argv[0])
    print('           or')
    print('       %s reload'%sys.argv[0])
    print('           or')
    print('       %s stop'%sys.argv[0])


if __name__ == '__main__':
    if len(sys.argv) < 2:
        usage()
        sys.exit(1)

    if sys.argv[1] == 'start':
        if len(sys.argv) < 5:
            usage()
            sys.exit(1)

        neighbour = sys.argv[2]

        node_name = sys.argv[3]
        node_type = sys.argv[4]
        keystore = ''
        if len(sys.argv) > 5:
            keystore = sys.argv[5]

        ip_addr = os.environ.get('FABNET_NODE_HOST', '0.0.0.0')
        port = os.environ.get('FABNET_NODE_PORT', DEFAULT_PORT)
        home_dir = os.environ.get('FABNET_NODE_HOME', DEFAULT_HOME)
        node_address = '%s:%s'%(ip_addr, port)

        if not os.path.exists(home_dir):
            os.makedirs(home_dir)

        os.system('PYTHONPATH="%s" nohup %s %s %s %s %s %s %s > /dev/null &' \
                 %(PYPATH, NODE_SCRIPT, node_address, neighbour, node_name, \
                    home_dir, node_type, keystore))

    elif sys.argv[1] == 'stop':
        os.system('killall -s INT fabnet-node')
        os.system('killall -s INT git_server.py')
    elif sys.argv[1] == 'reload':
        os.system('killall -s HUP fabnet-node')
    else:
        usage()
        sys.exit(1)

